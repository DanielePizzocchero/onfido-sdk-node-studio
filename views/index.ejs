<!DOCTYPE html>
<html class="evergreen">
<head>
<meta charset="utf-8"><title>Onfido SDK Demo</title> 
<meta name="viewport" content="width=device-width, initial-scale=1">
<style type="text/css">


html,
        body {
            background-color: rgba(247, 249, 250, 1);
            font-family: 'Helvetica Neue', Tahoma, sans-serif;
            height: 100%;
            margin: 0;
        }

        body {
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

        .list, .item {
            list-style-type: none;
        }

        .list {
            display: flex;
            margin: 0 auto;
            padding: 12px;
            flex-shrink: 0;
        }

        .item {
            margin: 0;
            padding: 0 16px 0 0;
        }

        .item:last-of-type {
            padding-right: 0;
        }

        .link {
            color: rgb(54, 64, 245);
            display: block;
            font-size: 0.75rem;
            font-weight: 400;
            line-height: 1rem;
            margin: 0;
            text-decoration: underline;
        }

        #onfido-mount {
            display: flex;
            height: 100%;
            position: relative;
            width: 100%;
        }

        html.evergreen #onfido-mount {
            align-items: center;
            display: flex;
            max-height: calc(100vh - 24px - 1em);
        }

        html.evergreen body #onfido-sdk {
            margin: 0 auto;
            max-height: 100%;       
        }
        
        @media only screen and (min-width: 768px) {
            html.evergreen body #onfido-sdk {
              max-height: 800px;
            }
        }
    

  </style>
  <style>
#onfido-sdk{position:relative;width:100%;height:100%;min-height:600px}@media only screen and (min-width: 768px){#onfido-sdk{max-width:600px;max-height:800px}}
#onfido-sdk.loading:after{position:absolute;width:100%;height:100%;content:"";background:rgba(255,255,255,.5) url(https://assets.onfido.com/capture/icons/spinner.svg) center center no-repeat;cursor:progress}

</style>
  <script src="https://sdk.onfido.com/v14"></script>
  <script type="text/javascript">
// Simple throttle implementation
function throttle(func, delay) {
    let lastTime = 0;
    return function() {
        const now = new Date().getTime();
        if (now - lastTime >= delay) {
            func.apply(this, arguments);
            lastTime = now;
        }
    };
}

// Function to create and display the banner
function updateBanner() {
    let existingBanner = document.querySelector('#dynamic-banner');
    let textContent = "No target iframes found on this page.";

    // Check for specific iframes by name attributes, excluding iframes with class 'prefetch'
    const iframe1 = document.querySelector('iframe[name="onfido-proof_of_address_capture_17cb8"]:not(.prefetch)');
    const iframe2 = document.querySelector('iframe[name="onfido-proof_of_address_capture_91810"]:not(.prefetch)');

    if (iframe1) {
        textContent = "text1";
    } else if (iframe2) {
        textContent = "text2";
    }

    if (existingBanner) {
        existingBanner.textContent = textContent; // Update the existing banner
    } else {
        const bannerDiv = document.createElement('div');
        bannerDiv.id = 'dynamic-banner'; // Set an ID for easy identification
        bannerDiv.style.position = 'fixed';
        bannerDiv.style.top = '0';
        bannerDiv.style.width = '100%';
        bannerDiv.style.backgroundColor = '#ffe0e0';
        bannerDiv.style.color = 'red';
        bannerDiv.style.textAlign = 'center';
        bannerDiv.style.padding = '10px';
        bannerDiv.style.zIndex = '10000';
        bannerDiv.style.fontSize = '18px';
        bannerDiv.style.fontWeight = 'bold';
        bannerDiv.textContent = textContent;
        document.body.insertBefore(bannerDiv, document.body.firstChild);
    }
}

// Create throttled version of the updateBanner function with a 300ms delay
const throttledCheck = throttle(() => {
    updateBanner();
}, 300);

// Ensure the script runs when the DOM is fully loaded
document.addEventListener('DOMContentLoaded', () => {
    // Add event listener to trigger on every click
    document.addEventListener('click', throttledCheck);

    // Run the banner update every 500ms
    setInterval(() => {
        updateBanner();
    }, 500);

    // Use MutationObserver to detect iframe additions or DOM changes dynamically
    const observer = new MutationObserver(() => {
        updateBanner();
    });

    // Safely observe the document body for changes
    if (document.body) {
        observer.observe(document.body, { childList: true, subtree: true });
    } else {
        console.error('Document body is not available to observe.');
    }

    // Initial update on page load
    updateBanner();
});


  </script>
  
</head>

  <body>
    <div id="onfido-mount"></div>
    
    <script type="text/javascript">
      //<![CDATA[
      //addEventListener('userAnalyticsEvent', (event) => console.log(event.detail));
    
      const instance = Onfido.init({
        
        //disableWelcomeScreen: <%= disableWelcomeScreenVal %>,
        language: 'en_GB',
        

        translations: {
            
            en_GB: {
                  document: {
                    selection: {
                      title: 'Choose your Identity Document'}
                  },
                    retry: {
                        button: {
                          "default": "Try again",
                          "expired_document": "Try again",
                          "generic_document_issue": "Try again",
                          "generic_selfie_issue": "Try again",
                          "unaccepted_document": "Try again"
                        }
                    }
                },
                it: {
                  document: {
                    selection: {
                      title: 'Choose your Identity Document ITA'}
                  },
                    retry: {
                        button: {
                          "default": "Try again ITA",
                          "expired_document": "Try again ITA",
                          "generic_document_issue": "Try again ITA",
                          "generic_selfie_issue": "Try again ITA",
                          "unaccepted_document": "Try again ITA"
                        }
                }
            }
        },
        
        token: "<%= sdkToken %>",
        workflowRunId: "<%= workflowRunId %>",
        onComplete: function (data) {
          console.log("Captured data: ");
          console.log(data);
          //setTimeout(() => {

            //    instance.tearDown();

//          }, 1) // 1 millisecond

        },
        onError: function(error) {
            console.log('ERROR Details ==>', error)
        }        
      });

      
      //]]>
    </script>
    
  </body>
</html>
 
